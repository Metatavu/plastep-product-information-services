{
  "id": "4ec6476f-9510-4c7f-baab-71c094ea11d3",
  "realm": "plastep",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "b56d52d8-6dee-4b38-8882-9df61143868b",
        "name": "admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "4ec6476f-9510-4c7f-baab-71c094ea11d3",
        "attributes": {}
      },
      {
        "id": "6c97799a-00f0-4714-bda7-3e59312b9a73",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "4ec6476f-9510-4c7f-baab-71c094ea11d3",
        "attributes": {}
      },
      {
        "id": "49de36d1-8bdb-46ee-92a4-1f213aeef9fb",
        "name": "default-roles-plastep",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "4ec6476f-9510-4c7f-baab-71c094ea11d3",
        "attributes": {}
      },
      {
        "id": "7c66a1d2-b2f5-4413-afff-bf172c27806b",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "4ec6476f-9510-4c7f-baab-71c094ea11d3",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "c833fe6f-da03-48fc-9a0c-a6cb9d1a91a8",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "eb704bb8-529d-4c91-a2ac-3684439a6422",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "c7558b50-e4c8-47d2-92e0-053f77554b40",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "a9c12266-620a-4f6f-9641-b0a4e1301c40",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "d3021c97-953e-4498-bab2-b18398912222",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "1b106cd4-c789-4007-94de-131bc59fa559",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "9826cd36-8433-4bbe-a370-43cd2c2f540f",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "e73a4b05-aa07-4ba1-9db1-10a916c7b569",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "3fe90bf1-1834-4d0d-bac0-0b74a99bcf0d",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "dede1199-b6c2-429c-bfd0-024348fcd9fb",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "9ae912dc-c53f-4f50-a8e2-846363737eab",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "2223e441-6bf0-4c47-9311-411a63e005e7",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "5e6ed060-a2f0-4985-a210-22c8b30f2e39",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "30a7c8da-4909-4b4d-b7e2-ad68ff6420a4",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "5dee0406-7cc3-4d6f-9f13-02ee6c3b16b3",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "41deed23-aef2-413b-8a11-e94ea0f28d4c",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "9bf59ad0-9513-4b98-950b-75705c48a313",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "1965d432-d53f-4bce-bd12-c780071856a0",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        },
        {
          "id": "a0168d9a-a2ed-4146-a172-3bc0f628140e",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "manage-identity-providers",
                "view-clients",
                "manage-users",
                "view-authorization",
                "manage-clients",
                "view-realm",
                "manage-authorization",
                "impersonation",
                "manage-realm",
                "manage-events",
                "query-users",
                "view-users",
                "query-clients",
                "query-groups",
                "view-identity-providers",
                "view-events",
                "query-realms"
              ]
            }
          },
          "clientRole": true,
          "containerId": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
          "attributes": {}
        }
      ],
      "ui": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "api": [],
      "broker": [
        {
          "id": "96e2490f-da80-4822-956c-7fd8f4515d28",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "cf92980b-e881-48a3-a165-b4e77cd1229c",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "c3aedc53-6fba-44c1-b9e3-2d9773dd1e53",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2ee0262-fc51-413b-be41-25dd96f9cbe8",
          "attributes": {}
        },
        {
          "id": "cb0c29fe-8256-4758-adf7-ce102e0146ff",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d2ee0262-fc51-413b-be41-25dd96f9cbe8",
          "attributes": {}
        },
        {
          "id": "53fb7165-35f7-474b-9d18-44482b8801c2",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2ee0262-fc51-413b-be41-25dd96f9cbe8",
          "attributes": {}
        },
        {
          "id": "82d8a779-8d08-4c12-81b1-9644d4b7fbd8",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d2ee0262-fc51-413b-be41-25dd96f9cbe8",
          "attributes": {}
        },
        {
          "id": "ab1ad12b-6f8d-4f38-b82b-89ff5df481ae",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2ee0262-fc51-413b-be41-25dd96f9cbe8",
          "attributes": {}
        },
        {
          "id": "1ea4250c-5604-4a53-b681-dc55be870165",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2ee0262-fc51-413b-be41-25dd96f9cbe8",
          "attributes": {}
        },
        {
          "id": "18c9d9e0-a8a2-4929-9731-f6f4a3083a8a",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2ee0262-fc51-413b-be41-25dd96f9cbe8",
          "attributes": {}
        },
        {
          "id": "db2ddea2-d419-49cd-86f8-863eefa80e1b",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2ee0262-fc51-413b-be41-25dd96f9cbe8",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "49de36d1-8bdb-46ee-92a4-1f213aeef9fb",
    "name": "default-roles-plastep",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "4ec6476f-9510-4c7f-baab-71c094ea11d3"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "3e9afd7d-62e4-4d99-9569-6376677d55ba",
      "createdTimestamp": 1674114676863,
      "username": "admin",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Admin",
      "lastName": "User",
      "credentials": [
        {
          "id": "080485d4-4e26-4ba8-8b55-a1b5b10e7b2a",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1674114685717,
          "secretData": "{\"value\":\"0SUBDrGO6H9Qx33nO389Pc10jydfSYjT1wdg8B5HEN00uko/T4/yHNNvGc85MntLtvK94h8ceLDW9aGhphjFjQ==\",\"salt\":\"GwppxU0Uv+WvxPhrDflBoA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "admin",
        "default-roles-plastep"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f8904bb6-a358-4863-aebe-4129e1ef0e97",
      "createdTimestamp": 1674114676863,
      "username": "secondAdmin",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Another Admin",
      "lastName": "User",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "admin",
        "default-roles-plastep"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "d2ee0262-fc51-413b-be41-25dd96f9cbe8",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/plastep/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/plastep/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0f89d9ac-6477-47ae-9653-bc7ef84b4e99",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/plastep/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/plastep/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "ceb9a013-b73c-4e02-a3a8-383066bd9578",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5cdba8ec-e0c5-4841-80b0-42940bf98e7d",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8b734b44-4d00-4a6e-88ef-249872faa01f",
      "clientId": "api",
      "name": "",
      "description": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "C4CLCSAw7w4Xblz540Bx8MoQERXzgaNt",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1674114664",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cf92980b-e881-48a3-a165-b4e77cd1229c",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "eb85a86a-6878-4dd2-ad77-f871e0e821dc",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3ee3fd1b-75cb-4dcf-898a-b9b26cfb45e0",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/plastep/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/plastep/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "d3cf92a3-39ae-4b5d-b779-339892fcf75c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ddb2a26d-d7d1-469d-a85d-59960fdbbeb3",
      "clientId": "ui",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "5cbb2bc8-8fb5-4e86-a3b6-04f5406a8646",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a4f58bc5-513b-4e97-a5ba-9ccfb5358ff3",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "dfcf3c15-ae49-4219-8a2f-3ebd2838ca8f",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "1308518d-4b89-49a7-98ed-af24930c830c",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "1852a5d5-9978-4b4f-a87a-d4370e9fd639",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "27c1f9d3-e6b3-4633-9dc5-6dcb6baed7c8",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "6764c1a5-3dad-4c21-b1db-6b5526546d25",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "9434a8d8-c484-46e7-bc86-a76beb957770",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "1390f2b7-6731-4262-9f6d-a878f013780d",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "23ee6094-8a2a-4ec9-a97f-0e2070048dee",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "f5508eba-f34a-44a3-8b51-587addf37b1d",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "8a060007-4636-42a4-8e11-3ec290bb4cb9",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "3651503a-7265-4bf6-ac40-01eea5958296",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "bbe943be-5cb2-48a2-9119-03f50a3257c2",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "0eec5441-912c-4cf1-85b5-89de5f5640fc",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "62d95587-e6a1-4b8a-a120-d13c66f2e97b",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "1fd338ca-55bf-41ec-892a-43ad23448c6f",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "a669e9c2-560a-4604-b855-d8d7515a1fce",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ca9582d4-c8af-4eba-8d34-ccee8be67c54",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d968817a-2913-4521-987a-b9aa34dfefdd",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "a15aa4bd-becd-44e4-8927-320dd2a58800",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5801bdd1-8433-4ba3-b1b4-5618a4f48cb4",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4aed7811-f17a-47b5-a19e-140a0d2b8999",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "511602ee-5722-40e4-a679-9995fbba391c",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "0333fc19-b01f-4e83-9f09-ae3056fcec1f",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d1e06075-beb0-4b42-80d7-4662379b98d3",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d4cf9bc8-2b1c-4525-982a-bb7740e31f6d",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "04917174-3fd7-45e8-92bf-9dbc4594b1b6",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "19549d69-d6c8-413d-a139-519f4526b228",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "265e38ea-1dbf-4977-8762-ad492cbab095",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "20c594dc-db22-4085-9f8f-794411a29ace",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0b1b2ebb-2e7c-404d-9185-40410df0e380",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fd28b346-f46d-4162-95d4-ba7b59eb2407",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "287f9535-b69a-46fe-a0d1-42761cf30f73",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "02a110cf-d495-462b-a8fc-7514756fa3de",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "ee8b9e73-704e-40da-a556-11a8f3417423",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "1178cdc1-7a76-4c89-9169-8d7af93cdb1f",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "7611d21e-3686-46ef-b0a2-18be53466328",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "7e8ea99f-1b77-4987-8410-63213593f984",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "cc273b2f-732a-4f18-a292-bd90b92908a3",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "4420f619-f3ea-4c51-9c82-fb66897c7934",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "d7bbb066-84b0-4476-9eaf-d30eb6411388",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "52e5a078-8710-4995-a21d-1a77999ba982",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "ed2f472e-d6ad-4c9c-9047-feb71a9b6c12",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "186b8d34-6d21-4a04-ad16-c54e7f635907",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "9dee9bae-f76e-40c3-ad20-603ca895f050",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAtlNUylpgr1mu4s9p8v/lZ8FjaBLipMAOe47Rz7VeNtapBj6m7VqMhS/RrS+gdygkrbgRufoKjn7uItZ6+xRz2impJpBxGSD4V3GwIImpGOWRB0gYu4kEBPH+aYmKiVAyidVWi4xO4P7H+nJG2WUURyKio/iByG+a8U8VbGFgJrKikfecOJJX6BDakLj9YkCXKCy/JX0J09gnwifmf+3UgLroDOuE45aiLSiLW+uLaLGOjcN2IqLRwOKyXEFCDFN5hCXV6elxAs1PADiU8tbYT/k8ccPJrChXZ1ohj18Y1u+vrh03BrrdGLk/dCGAJUD1pSTLVHnvYnE8FxH09ttvSQIDAQABAoIBABShTjVNT6ZXr/2y+WqJAPSiAbT7ehCpOJpLeTsW6w+qb1qpCStPNRo25HNDsdT5wlizvLG99KbV/u0LNsQlNsynLSATdPCideczEnpECVGrXCMmScIiiUVj+mUHrpjF7coBzTaiDCTSP197wb+Ee+xmo1+JVWoQEsieKa7nP8FxASbQvtSYHF0zN2InRmohWhXW2hHW2E5yW2wTGVX+PORTa0yXOy00+YqnDpUGJ3CvMzhuJ1EKHwLHx17ehdW2ifv1iIlbLxG52Xw9KLcYz14eNuT0fU9E2mfRYEhdUCMvkELW6iWGcFWtAw4lkZKgKNm36psg6uwrJcXfJTt9+YECgYEA2MOrrB1gj/lg16/aA65Tru04N1wM1P4QkH+NMz0S0XqY0HduSpRxr7DFfi7Aeass0VkLTzT0eaxk0q8gs+no4cNhybtXLU6uvXnlALQNF9dx1Fkr5HxONDx/hxPulKtdbPpfcCtjjehd6sLMjEjzBRmJW/ZWo9DrW+/eg30DnyECgYEA11PZgj6dyQ+VoiJas2+dJzoTuXU09gvV/b3vNsDb+37zT2ONODkCpAeTzlw/nH2ulVhv3wMJA93H+Hm1vHjzakCwAe6/0bbQoInyQyktIB4Go1kEFDbw2NXDl0NoE1WLIi96+gVaCps+OHcbEYItDtfFeNNFazAZQNUGAiMHkykCgYBITVwh2Nqwq1nmF738pFU9b9rkfEu7b9NOn30VrjVsshvuzSd4sPMKy0fUwvtomfQlEDJ5hQxW2W336HpcCJWpWGZxx49YiXo3sUT1axlC7pYFYokFeYEMY3GWOMvHwzEyfIEBBTf7yZoqCDf6QwrslIwApLZZhgI7dFMgQL7IgQKBgQC6FfeqTGzVvoclGCVkXrfkl5dGNhlv7Wigoc0id2dlICArYrA/f11d3kKJG0XJ+v+uh0Ae7aOT2M2hWaWKXMiX8ZFqCidxmFkR9EUOb35U/D3mWt5gjd50tcATcCh4VPwprfjMK2XWNrV93Mjix6oi4qwAsCyU5ntcgPxxSk6YiQKBgQDHHB3T51k3WgHC4sRZTG3g/o49TB3fxGj6ey8SNdcRjpsbR54hUFtvNEg9KLAtDrninVfwT5kkZH/UP2zJwcHdVuAyBl87QMOVDU/cmyLzc/YUzlNgDvcsJ07PeLRyN4qe3WJCyz2QRfqgAOGMnPvmko3joOW644X6lLlaxgwI3g=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGFyQH8nzANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdwbGFzdGVwMB4XDTIzMDExOTA3NDg0OFoXDTMzMDExOTA3NTAyOFowEjEQMA4GA1UEAwwHcGxhc3RlcDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALZTVMpaYK9ZruLPafL/5WfBY2gS4qTADnuO0c+1XjbWqQY+pu1ajIUv0a0voHcoJK24Ebn6Co5+7iLWevsUc9opqSaQcRkg+FdxsCCJqRjlkQdIGLuJBATx/mmJiolQMonVVouMTuD+x/pyRtllFEcioqP4gchvmvFPFWxhYCayopH3nDiSV+gQ2pC4/WJAlygsvyV9CdPYJ8In5n/t1IC66AzrhOOWoi0oi1vri2ixjo3DdiKi0cDislxBQgxTeYQl1enpcQLNTwA4lPLW2E/5PHHDyawoV2daIY9fGNbvr64dNwa63Ri5P3QhgCVA9aUky1R572JxPBcR9Pbbb0kCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAAf9Q/gCsw672zea6D6/phXAlPhT0QlEF9TTWWMDheA7y8cJqFTZFoKaVZz5DMAjTUFpz5+uqDW57c5KtPU0VAmOcpe3YS2yZg4r4cVDX0QLR6rwLmg0i+KFL/gkgJxo8vjpvGKxOYn8RuPlebn6/2QTzmRU+0DhZnuqa/WqF+vuHql5vO5PvXbD9fro1Wxs7/jhzCllPSFKOi+snO4Z0ZRQT56FMGPpgavRCVgq0vTa4GnN7km4RSbfsEIQ0KF+LpGAm4snEp2gLXwza/DOYp1Sbg1EUMAZBEpixGRcfsDwBOw3NUUAuFMDhJOphG92KI8R49LAsNhqWW4TMzd1bEA=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "df2dd9d3-44b7-4b02-b596-d8e03450110e",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA0OvtsgSCGLV+9H6OcVk5w13ePvltkfI7ZJcexoc0eAtgfoowq2r0OhuDf9lBAJ4ZBqffuPjUIHAnWOFutizp3qJamm0yvD4btLsQVaK7wO9LkJl4Flp5fmZ7R43n6kZiW4CKFl5i0NSJpG6A6wZdigTS3Nfs00nkk0ekGk/vdrA2F0dMNVTIxk3ApjYbb2UHTe4dTeiwVOdT2bgPedBuOjZt/zY4eNlaJvARWZwtFL/RaKDq7gEcu3jwpw/5hxfV/P4frHKezomwIcfZxxvEUToi646BGftFueS/rp4II7sntoq52ou/eCE5g0pLWWq2msF9rIY6XJUnYE3ziFNkywIDAQABAoIBAA8zyRE7Qb+MNBI/bpxcipb8QB1N/MVHc+nvEywNZOnX+MFhyzErWwfVaQgHEN37eG+4Yc+tujsoCLzvc8++zJUeNECTce3VCSK+upgN+400/HHSW7TTXY7Z5IjsOwlxmLD21VV+WxYTY8v6xy0S7VXgjFAfSC+HFiJfbqyuz1/P81yKwVPJsHS/TFPLTGyihtb9rqs2WP7IpezANWHHiYZgYdwMD+IVyxNTyz82JzpaWePbabQ/RZmf8BE7qI715J+qkMBmA5pEcWa5g/Nr92D11cYTlrCDhKe8ALpFaJmSFfU6YTbllvqr9RQ+lEJOhEd8su65qHskghHTlHYvD20CgYEA7WnxF0pa9q/isY0tAVYjuIEhvdOXsHRZ64byzXVv5BL/XQEHHpDQ7n1vpDF387jrdxzy6NxEzIZTTjMGrxETKp9ezqxZHLA23Cp5qvMsNNzsruqQpzHNe1xe15YLyqAQHeJpfrsB7ouGyh944zECbdFvSom6dT3cPzNmd1ZgZD0CgYEA4Ub30rRc0uVtxBKIhadmADDcNaElOotekVwPLf6Q33DBXXdwDRPT7c6xPLVm3Us/GqBtWpmbExQTscwP/pD6ZMw0sNDIXjeNNPplhm5fxCftt4Ew/J/rvBuxD1l+AAy3i3QcTeNYOH+UKKTs9qBzvaSKjVo3uN+TOETLKVKtFacCgYAcz3trWSGayBNZeolYnSxuinUexRumVShIVbMHTdYLNmb40VQc2HQSTPSMV1h4Ihuo88FiksBilXZsifKosgjCZl6p8+5IdfXiV+E15paZv6mVPG/bakbGTppPzSyXJT9vcPdeYrFEUnhD9PfFkj/6Na0svXP8IEqm/MTVfIzr/QKBgAnNsNM2jiOPYGt78vz9/+5aMfsTfC9ECWWCABccUOmoWoHaxMGM71gV+piNvGA8+g4KlTewH5OA+CpwmvGVFZB1YoWfUFjpSffYPbrP6tL6ednWgW889mFFQztLxbPy2bnz35d0IU60Hpp2Mum4qdDC7FSibHJbKGj2dXDi7C1ZAoGBAK7O4GtwaZcN8S6OsHS5FSYr8PUydr29y8XNJfNClHX4kSWUow2hc+URnP7s7vlx4W+TAPLUpIIb9Ff4sj1Y4nWUobSKibYvS/+mphg6P3vrNRBeX9GtXjIV96pC44mRayZoUjK05qbaOQRkCyqvLzD+AXJByTr0gRZ1R1bYVGaJ"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGFyQH8IzANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdwbGFzdGVwMB4XDTIzMDExOTA3NDg0OFoXDTMzMDExOTA3NTAyOFowEjEQMA4GA1UEAwwHcGxhc3RlcDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANDr7bIEghi1fvR+jnFZOcNd3j75bZHyO2SXHsaHNHgLYH6KMKtq9Dobg3/ZQQCeGQan37j41CBwJ1jhbrYs6d6iWpptMrw+G7S7EFWiu8DvS5CZeBZaeX5me0eN5+pGYluAihZeYtDUiaRugOsGXYoE0tzX7NNJ5JNHpBpP73awNhdHTDVUyMZNwKY2G29lB03uHU3osFTnU9m4D3nQbjo2bf82OHjZWibwEVmcLRS/0Wig6u4BHLt48KcP+YcX1fz+H6xyns6JsCHH2ccbxFE6IuuOgRn7Rbnkv66eCCO7J7aKudqLv3ghOYNKS1lqtprBfayGOlyVJ2BN84hTZMsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAEIaroolpV9X3v7z177nvNfym00eQr/MW0llMVkbgQoWBr+UM9HCdxUMSVH+znTfSUEQxkujWbv/edjVX0KjLYH4IaX99nzhuDgGYKuzRGbcXTAnMJRF55duu/S0VxHUZYUDkQ6413N0WO+y0XgJLBT2K8E6wOBmmxUdaO/9TiODcdIG4HT/bxKvM96AURg6jza6Sz+lowrRLvAMNc5nfRbhTFpLkD9ZqnjvA+45VXJDCmuJMz3eigwJ9C1eo7GYMDTRbhkFymBHaLS2P6C5gAVPLPEOPJubmM9zjLiSyCNHRLtc8syECrldkYFoZ5ObCyDCZvFpfOslAd5vCbZzTag=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "88828858-1683-46d7-9ea3-b3a89fe393ff",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "57e3e1da-dee3-4b5d-81e9-5faa39990b2a"
          ],
          "secret": [
            "tVxpISfmew8r5dthhNgIiw"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "a80800e3-4cd8-4b8c-8ff7-b15b4fe913c7",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "f8786993-f465-4e16-8e4d-2a74302fe6c7"
          ],
          "secret": [
            "GpVLmd5K0fFJtqDuco7zFFrOYbx0kJiwMQLAZlXzhixtdv3xsOPbJqOdx1xgydw0nOSkb9vPFYZqjCtyXfK7lw"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "24b7dc0e-c334-435b-b760-3a15e50f212b",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9bcfc99e-abcf-448d-9c0c-53a43686d0c5",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "100144df-9932-4714-93c8-83069c40aa42",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8f3bc0b6-ad77-4a40-a74d-e86047263cc5",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5ae031fb-3857-489b-a032-52e04a702ece",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cf51aa2c-0297-4fa7-958f-a7a3746331e7",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "42216bd8-beb6-4eb6-8f0e-7f0577ce46d4",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "15dc02f2-40a6-4c80-81b9-76e8a83439bc",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f1c3b304-e074-4021-bbf5-f44a184439c9",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ced27532-8b97-4574-af6b-f0e75b2d0ca7",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ed4d0700-1d3d-4b0c-8689-d65c14135e93",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "536db68d-0335-4eaa-b810-95737f7b5df7",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "790b4e94-11c6-49d9-82cd-38dfbcfc6fd7",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5bfeff82-e45e-4214-8a5d-9db650cfe2d7",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "890a4e19-ecc9-4b6f-8714-a8d5028b8013",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a82fce99-768a-418d-ae9a-eb8244b43456",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ba365289-87e3-4d25-982e-1623afae01b8",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d10df4c1-48ea-42cf-90d7-fe2ee0584783",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9d8456a5-c8c6-4d65-a784-e0bb7a633d41",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "24b723b0-cba9-44e0-8fb4-451531e732f4",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "011f3ccd-4bbf-4024-8f79-808bd029b4fd",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "1b36407f-40d3-4109-8f09-86b1da78913a",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "20.0.3",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}